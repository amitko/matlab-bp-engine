function res = treeplot(Z,C,dt)
%TREEPLOT Plot picture of tree.
%   BP_TREEPLOT(Z) plots a picture of a tree given a vector of
%   parent pointers, with p(i) == 0 for a root.
%    The process Z is generated by gen_bp
%   Z(1,:) - vector of parent pointers
%   Z(2,:) - generation
%   Z(3,:) - type ot particle (1 - live, 2 - dead)
%   C describes the type of the nodes
%    	C(1,:) is type: one of 1...13 for 'o*s^dp><vs+.'
%    	C(2,:) is the colour: one of 1...8 for 'kwbgrcmy', be default is 'k'
%    	if C is omited then the colour is 'b' the type is 'o'.
%    dt is the color of the edges of the graf. By default is 'k-'
%
%
%   Uses bp_treelayout.

% Dimitar Atanasov, 2020
% datanasov@nbu.bg

% Based on treeplot

p = Z(1,:);
[x,y,h]=bp.plot.treelayout(Z);
f = find(p~=0);
pp = p(f);
X = [x(f); x(pp); repmat(NaN,size(f))];
Y = [y(f); y(pp); repmat(NaN,size(f))];
X = X(:);
Y = Y(:);
res=figure;
if nargin == 1
    n = length(p);
    if n < 500,
        plot (x, y, 'ko', X, Y, 'k-');
    else,
        plot (X, Y, 'k-');
    end;
else
    color = 'kbgrcmyw';
    type = 'o*s^dp><vs+.';
    C = C';
    if size(C,2) < 2
        C(:,2) = ones(size(C,1),1);
    end;
    hold on;
    for k=1:size(x,2)
        plot (x(k),y(k),[type(C(k,1)) color(C(k,2))]);
    end;
    if nargin == 3
        plot (X, Y, dt);
    else
        plot (X, Y, 'k-');
    end;
    hold off;
end;

%xlabel(['height = ' int2str(h)]);;
xlabel(['height = ' int2str(max(Z(2,:)))]);;